@page "/home/employeeList"
@using WiseHRServer.Models
@inject EmployeeService EmployeeService
@inject BankingService BankingService
@inject ExperienceService ExperienceService
@inject NavigationManager NavigationManager
@using WiseHRServer.Models
@layout HomeLayout
<h3 class="section-title">All Employees</h3>

@if (isLoading)
{
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}
else if (hasError)
{
    <div class="alert alert-danger custom-alert">Failed to load employee data.</div>
}
else if (employees != null && employees.Count > 0)
{
    <div class="row">
        @foreach (var emp in employees)
        {
            <div class="col-md-4 mb-4">
                <div class="employee-card card shadow-sm"
                     @onclick="() => ShowEmployeeDetails(emp.EmployeeID)">
                    <div class="card-body d-flex align-items-center">
                        @if (!string.IsNullOrEmpty(emp.PhotoBase64Content))
                        {
                            <img src="data:@emp.PhotoContentType;base64,@emp.PhotoBase64Content" class="rounded-circle" alt="Employee Photo" style="width: 80px; height: 80px; object-fit: cover;" />
                        }
                        <div class="ms-3">
                            <h5 class="card-title">@($"{emp.FirstName} {emp.LastName}")</h5>
                            <h6 class="card-subtitle mb-2 text-muted">@emp.EmployeeID</h6>
                            <p class="card-text">@emp.CurrentEmail</p>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else if (employees != null && employees.Count == 0)
{
    <div class="alert alert-info custom-alert">No employees found.</div>
}


@code {
    private List<EmployeeDetails> employees;
    private bool isLoading = true;
    private bool hasError = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Fetch employees data when the page loads
            employees = await EmployeeService.GetAllEmployees();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading employees: {ex.Message}");
            hasError = true;
        }
        isLoading = false;
    }

    private void ShowEmployeeDetails(string employeeId)
    {
        // Navigate to a detailed employee page or show details in a modal
        NavigationManager.NavigateTo($"/employeeDetailsData/{employeeId}");
    }
}
